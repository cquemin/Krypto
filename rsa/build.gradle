plugins {
    id 'kotlin-multiplatform'
}

apply plugin: 'maven-publish'

group pomGroup
version pomVersion

kotlin {
    jvm()
    // This is for iPhone emulator
    // Switch here to iosArm64 (or iosArm32) to build library for iPhone device
    iosX64("ios") {
        binaries {
            framework()
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation project(':common')
                implementation kotlin('stdlib-common')
            }
        }
        commonTest {
            dependencies {
                implementation project(':common')
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
                implementation "io.mockk:mockk-common:${libMockKVersion}"
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib')
                implementation "io.mockk:mockk-common:${libMockKVersion}"
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        iosMain {
        }
        iosTest {
        }
    }
}

task iosTest {
    def device = project.findProperty("iosDevice")?.toString() ?: "iPhone 8"
    dependsOn kotlin.targets.ios.binaries.getTest('DEBUG').linkTaskName
    group = JavaBasePlugin.VERIFICATION_GROUP
    description = "Runs tests for target 'ios' on an iOS simulator"

    doLast {
        def binary = kotlin.targets.ios.binaries.getTest('DEBUG').outputFile
        exec {
            commandLine 'xcrun', 'simctl', 'spawn', '--standalone', device, binary.absolutePath
        }
    }
}

configurations {
    compileClasspath
}